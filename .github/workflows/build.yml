name: build-ubuntu_20_04

on:
  push:
    branches: [ master, '*-ci' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CPPCHECK_HOME: "${{github.workspace}}/cppcheck-2.6"
      SPOTBUGS_HOME: "${{github.workspace}}/spotbugs-3.1.12"
      PYLINT_ENABLED: 1
      PYLINT_EXTRA_ARGS: "--disable=wrong-import-order"
      MYPY_ENABLED: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install virtualenv
        python -m pip install gcovr
    - name: Workaround for 'Unable to connect to ppa.launchpad.net' failure during installation
      run: sudo apt-get update --option Acquire::Retries=100 --option Acquire::http::Timeout="300"
    - name: Install dependencies
      run: sudo apt-get install cmake doxygen graphviz
    - name: Install specific version of C++ static code analysis tool (cppcheck)
      run: |
        wget https://github.com/danmar/cppcheck/archive/2.6.tar.gz -P "${GITHUB_WORKSPACE}" -O cppcheck-2.6.tar.gz
        tar -xf "${GITHUB_WORKSPACE}"/cppcheck-2.6.tar.gz
        mkdir "${GITHUB_WORKSPACE}/cppcheck-2.6/build"
        pushd "${GITHUB_WORKSPACE}/cppcheck-2.6/build"
        cmake .. -DHAVE_RULES=ON -DUSE_MATCHCOMPILER=ON \
               -DCMAKE_INSTALL_PREFIX="${GITHUB_WORKSPACE}"/cppcheck-2.6 \
               -DCMAKE_INSTALL_BINDIR=. \
               -DCMAKE_BUILD_TYPE=Release \
               -DFILESDIR=.
        cmake --build . --target install
        popd
    - name: Install specific version of Java static code analysis tool (spotbugs)
      run: |
        wget https://repo.maven.apache.org/maven2/com/github/spotbugs/spotbugs/3.1.12/spotbugs-3.1.12.zip -P "${GITHUB_WORKSPACE}"
        unzip "${GITHUB_WORKSPACE}"/spotbugs-3.1.12.zip
    - name: Build Zserio
      run: scripts/build.sh all-linux64-gcc
      env:
        GCOVR_BIN: "" # coverage disabled
    - name: Build Zserio runtime using clang
      run: scripts/build.sh cpp_rt-linux64-clang
      env:
        SANITIZERS_ENABLED: 1
    - name: Pack Zserio release
      run: scripts/release.sh
    - name: Run Zserio tests
      run: |
          unset JAVA_TOOL_OPTIONS # workaround https://github.com/actions/virtual-environments/issues/1437
          scripts/test.sh all-linux64-gcc cpp-linux64-clang
    - name: Run Zserio integration tests for repeated generation
      run: |
          unset JAVA_TOOL_OPTIONS # workaround https://github.com/actions/virtual-environments/issues/1437
          scripts/test_gen.sh all-linux64-gcc cpp-linux64-clang
    - name: Archive Zserio artifacts
      uses: actions/upload-artifact@v2
      with:
        name: zserio-release
        path: release-*

